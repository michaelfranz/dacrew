This blog post outlines some best practices for
structuring a Python CLI application.

CLI (Command-Line Interface), is a program that
allows users to interact with a computer’s operating
system by entering commands as text. These
commands are typically executemed in a terminal or
command prompt. CLI applications offer a way to
perform various tasks without the need for a
graphical user interface (GUI).

The CLI application that I built for this project offers a
user-friendly way to access and manipulate data
related to countries and their iconic landmarks. By
following a structured approach, I have designed the
application to not only perform its intended function
but also serve as a testament to the importance of
proper project organization and the use of essential
Python libraries.

When building the codes, I kept in mind the principle
of “separation of concerns,” which is the practice of
breaking down a project into distinct, manageable

Maintainability: when code is logically organized,
making updates and fixing bugs becomes easier.
Scalability: making it easier for engineers to
implement future changes and expansions.
Collaboration: separating concerns makes it
easier for co-workers to work on different parts of
the project.
In this project, I used a structured approach by
dividing the code into distinct modules that handle
different aspects of the application:
1. Models Module (models.py): to manage the
database and to define data schema, I have
created this module to define SQLAlchemy
models for ‘Country’ and ‘Landmark’.

2. CLI Commands Module (cli.py): for handling user
interactions and CLI commands, I have created a
module named cli.py. This is where I used the
Click library to define the commands users can
use to interact with the application.

To help design user-friendly and intuitive commands,
I used the Click library; Click provides decorators and
tools for defining and handling commands. In my
project, I used Click to define commands that allow
users to interact with the database of countries and
landmarks. Let’s take a look at how we defined the
add_country command using Click.
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  jira_ingest:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - DACREW_LOG_DIR=/app/logs
      - TZ=Europe/Zurich
      - REDIS_URL=redis://redis:6379
      - JIRA_INGEST_HOST=0.0.0.0
      - JIRA_INGEST_PORT=8080
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "dacrew.jira_ingest.cli", "serve"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  worker:
    build: .
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - DACREW_LOG_DIR=/app/logs
      - TZ=Europe/Zurich
      - REDIS_URL=redis://redis:6379
      - WORKER_BATCH_SIZE=10
      - WORKER_POLL_INTERVAL_MS=5000
      - WORKER_MOCK_PROCESSING=true
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "dacrew.worker.cli", "run"]
    restart: unless-stopped

volumes:
  redis_data:
